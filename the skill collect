### linux kernel编译 ###
1、error: code model kernel does not support PIC mode
修改${kernel_path}/arch/x86/Makefile文件中的BITS := 64脚本代码块，添加一行来修改gcc的编译参数，KBUILD_CFLAGS += -fno-pic

2、fatal error: linux/compiler-gcc7.h: No such file or directory
问题原因是Ubuntu18.04安装build-essential时，默认安装的是gcc-7，但是在${kernel_path}目录下，我们查看支持的gcc文件头，find ./ -name compiler-gcc*得到如下结果：

结果显示，只支持gcc-3，gcc-4，gcc-5，所以再安装一个gcc-5.
sudo apt install gcc-5
然后用update-alternatives重新建立一个gcc链接文件。
再用sudo update-alternatives --config gcc选择gcc的版本为gcc-5，选择完成后，查看gcc版本号gcc --version（这里好像不能补全了）确认一下。

3、fatal error: curses.h: No such file or directory
sudo apt-get install libncurses5-dev libncursesw5-dev
--------------------- 
版权声明：本文为CSDN博主「今朝酒醒，来日方长」的原创文章，遵循CC 4.0 by-sa版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/stranger00001/article/details/84637032


### gcc install ###
1. 


### 删除原有gcc链接，重新建立软链接 ###

1. cd /usr/bin 
2. sudo rm -r gcc //移除之前的软链接
3. sudo ln -sf gcc-5 gcc // 建立gcc-5的软链接 此处尝试使用gcc-5.5.0，但是报错
4. sudo rm -r g++  //同上
5. sudo ln -sf g++-5 g++  //同上

作者：Pig_deng饲养员
链接：https://www.jianshu.com/p/0caef3ce8e06
来源：简书
简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。


### 是不是在使用ubuntu的时候特别是安装或更新的时候会出现下面的情况： ### 
E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable) 
E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it? 导致没办法进行下去？

在大部分情况下，问题的原因在于其它的程序如系统的自动更新、新立得等正在使用apt-get进程，所以解决方法也就是将这一进程关闭。
具体如下：

方法一：
执行一下 sudo dpkg --configure -a
方法二（亲测可以用）：
sudo rm /var/lib/apt/lists/lock
方法三：
1、ps-aux 查出apt-get进程的PID,
2、用sudo kill PID代码 杀死进程(我都是找出带apt字样的进程格杀勿论)

创建不带历史记录的分支
1.Checkout
   git checkout --orphan latest_branch
2. Add all the files
   git add -A
3. Commit the changes
   git commit -am "commit message"

4. push the local branch to remote
   git push origin dbg_lichen_star:dbg_lichen_star

4. Delete the branch
   git branch -D master
5.Rename the current branch to master
   git branch -m master
6.Finally, force update your repository
   git push -f origin master
————————————————
版权声明：本文为CSDN博主「yanchengyc」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/yc1022/article/details/56487680


Failed to connect to 127.0.0.1 port 8888 :conection refused
其实很简单。发现是系统自动开启了127.0.0.1 prot 8888的代理，
此时，可以检测试下，是不是电脑端的 8888的端口被占用了。
env | grep -i proxy
果不其然
被占用了。

solution: export http_proxy=''
————————————————
版权声明：本文为CSDN博主「Jamin_正宗红罐辣酱」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/jamin0107/article/details/54380326
